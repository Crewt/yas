[ ('1','parse # eglParser(bfplAbstract: (=>))',box,[]), ('2','bigstep # bfplBigstep',box,[]), ('3','smallstep # bfplSmallstep',box,[]), ('4','denotational # bfplDenotational',box,[]), ('5','parse # parserOfBgl',box,[]), ('6','project # bglToBsl',box,[]), ('7','parse # eglParser(bglAbstract: (=>))',box,[]), ('8','parse # eglParser(biplAbstract: (=>))',box,[]), ('9','bigstep # biplBigstep',box,[]), ('10','smallstep # biplSmallstep',box,[]), ('11','scan # bnlScanner',box,[]), ('12','parse # bglParser',box,[]), ('13','parse # bglParser(bnlScanner)',box,[]), ('14','implode # bglImploder',box,[]), ('15','explode # bglExploder',box,[]), ('16','unparse # bglTreeToTokens',box,[]), ('17','unparse # bglTreeToText',box,[]), ('18','evaluate # bnlTextEvaluator',box,[]), ('19','convert # bnlTextConverter',box,[]), ('20','evaluate # bnlTermEvaluator',box,[]), ('21','convert # bnlTermConverter',box,[]), ('22','solve # bnlSolver',box,[]), ('23','parse # eglParser(yabnlAbstract: (=>))',box,[]), ('24','conformsTo # bglConformance',box,[]), ('25','parse # parserOfBsl',box,[]), ('26','parse # eglParser(bslAbstract: (=>))',box,[]), ('27','conformsTo # bslConformance',box,[]), ('28','interpret # bstlSig',box,[]), ('29','interpret # bstlTerm',box,[]), ('30','parse # eglParser(btlAbstract: (=>))',box,[]), ('31','typeOf # btlTyping',box,[]), ('32','bigstep # btlBigstep',box,[]), ('33','smallstep # btlSmallstep',box,[]), ('34','parse # eglParser(ddlAbstract: (=>))',box,[]), ('35','pp # dglPp',box,[]), ('36','parse # eglParser(efplAbstract: (=>))',box,[]), ('37','infer # efplInference',box,[]), ('38','bigstep # efplBigstep',box,[]), ('39','parse # eglParser(eglAbstract: (=>))',box,[]), ('40','parse # eglParser(eiplAbstract: (=>))',box,[]), ('41','executeDynamic # eiplDynamic',box,[]), ('42','executeMixed # eiplMixed',box,[]), ('43','executeStatic # eiplStatic',box,[]), ('44','parse # eglParser(elAbstract: (=>))',box,[]), ('45','evaluate # elEvaluate',box,[]), ('46','parse # eglParser(elrlAbstract: (=>))',box,[]), ('47','parse # eglParser(eslAbstract: (=>))',box,[]), ('48','conformsTo # eslConformance',box,[]), ('49','atomToRef # atomToRef',box,[]), ('50','parse # eglParser(fsmlAbstract: (=>))',box,[]), ('51','simulateFsm # simulateFsm',box,[]), ('52','acceptFsm # acceptFsm',box,[]), ('53','notAcceptFsm # notAcceptFsm',box,[]), ('54','statesOfFsm # statesOfFsm',box,[]), ('55','inputsOfFsm # inputsOfFsm',box,[]), ('56','actionsOfFsm # actionsOfFsm',box,[]), ('57','stepperOfFsm # stepperOfFsm',box,[]), ('58','fsmToDgl # fsmToDgl',box,[]), ('59','ppJavaDecl # ppJavaDecl',box,[]), ('60','mapping # tblToGbl',box,[]), ('61','parse # eglParser(lalAbstract: (=>))',box,[]), ('62','deps # lalDeps',box,[]), ('63','transform # lalReuse',box,[]), ('64','pp # lalPp',box,[]), ('65','translate # lalUeber',box,[]), ('66','parse # eglParser(mmlAbstract: (=>))',box,[]), ('67','resolve # termToGraph',box,[]), ('68','relax # relaxMm',box,[]), ('69','recardinalize # recardinalize',box,[]), ('70','mmlToDll # classesToTables',box,[]), ('71','count # mmlCount',box,[]), ('72','mmTransform # mmTransform',box,[]), ('73','pp # pplRender',box,[]), ('74','parse # eglParser(rlAbstract: (=>))',box,[]), ('75','rlToPro # rlToPro',box,[]), ('76','rlDerive # rlDerive',box,[]), ('77','parse # eglParser(tblAbstract: (=>))',box,[]), ('78','mapping # tblGraph',box,[]), ('79','diff # termDiff',box,[]), ('80','applyDiff # termApplyDiff',box,[]), ('81','invDiff # termInvDiff',box,[]), ('82','loc # textLoc',box,[]), ('83','scan # exprScanner',box,[]), ('84','parse # bglParser',box,[]), ('85','parse # bglParser(exprScanner)',box,[]), ('86','implode # bglImploder',box,[]), ('87','explode # bglExploder',box,[]), ('88','unparse # bglTreeToTokens',box,[]), ('89','unparse # bglTreeToText',box,[]), ('90','parse # eglParser(figureAbstract: (=>))',box,[]), ('91','pp # figurePp',box,[]), ('92','dump # ueberDump',box,[]), ('93','languages # ueberGraphLanguages',box,[]), ('94','functions # ueberGraphFunctions',box,[]), ('95','bfpl(text)',ellipse,[filled]), ('96','bfpl(term)',ellipse,[filled]), ('97','ok(bfpl(term))',ellipse,[filled]), ('98','bfpl(value(term))',ellipse,[filled]), ('99','bfpl(normal(term))',ellipse,[filled]), ('100','bgl(text)',ellipse,[filled]), ('101','bgl(term)',ellipse,[filled]), ('102','bipl(text)',ellipse,[filled]), ('103','bipl(term)',ellipse,[filled]), ('104','bipl(store(term))',ellipse,[filled]), ('105','bnl(text)',ellipse,[filled]), ('106','bnl(tokens(term))',ellipse,[filled]), ('107','bnl(tree(term))',ellipse,[filled]), ('108','bnl(term)',ellipse,[filled]), ('109','bnl(value(term))',ellipse,[filled]), ('110','bnl(formula(term))',ellipse,[filled]), ('111','yabnl(text)',ellipse,[filled]), ('112','yabnl(term)',ellipse,[filled]), ('113','bsl(text)',ellipse,[filled]), ('114','bsl(term)',ellipse,[filled]), ('115','bstl(term)',ellipse,[filled]), ('116','btl(text)',ellipse,[filled]), ('117','btl(term)',ellipse,[filled]), ('118','ok(btl(term))',ellipse,[filled]), ('119','btl(type(term))',ellipse,[filled]), ('120','ddl(text)',ellipse,[filled]), ('121','ddl(term)',ellipse,[filled]), ('122','dgl(term)',ellipse,[filled]), ('123','efpl(text)',ellipse,[filled]), ('124','efpl(term)',ellipse,[filled]), ('125','ok(efpl(term))',ellipse,[filled]), ('126','efpl(value(term))',ellipse,[filled]), ('127','egl(text)',ellipse,[filled]), ('128','egl(term)',ellipse,[filled]), ('129','eipl(text)',ellipse,[filled]), ('130','eipl(term)',ellipse,[filled]), ('131','el(text)',ellipse,[filled]), ('132','el(term)',ellipse,[filled]), ('133','elrl(text)',ellipse,[filled]), ('134','elrl(term)',ellipse,[filled]), ('135',term,ellipse,[filled]), ('136','esl(text)',ellipse,[filled]), ('137','esl(term)',ellipse,[filled]), ('138','fsml(text)',ellipse,[filled]), ('139','fsml(term)',ellipse,[filled]), ('140','java(term)',ellipse,[filled]), ('141','java(text)',ellipse,[filled]), ('142','gbl(graph(term))',ellipse,[filled]), ('143','lal(text)',ellipse,[filled]), ('144','lal(term)',ellipse,[filled]), ('145','lal(config(term))',ellipse,[filled]), ('146','mml(text)',ellipse,[filled]), ('147','mml(term)',ellipse,[filled]), ('148','mml(graph(term))',ellipse,[filled]), ('149','ddl(mml(term))',ellipse,[filled]), ('150','mmtl(term)',ellipse,[filled]), ('151','ppl(term)',ellipse,[filled]), ('152',prolog,ellipse,[filled]), ('153','rl(text)',ellipse,[filled]), ('154','rl(term)',ellipse,[filled]), ('155','tbl(text)',ellipse,[filled]), ('156','tbl(term)',ellipse,[filled]), ('157','tbl(graph(term))',ellipse,[filled]), ('158','deps(term)',ellipse,[filled]), ('159','tokens(term)',ellipse,[filled]), ('160','diff(term)',ellipse,[filled]), ('161','graph(term)',ellipse,[filled]), ('162',text,ellipse,[filled]), ('163','expr(text)',ellipse,[filled]), ('164','expr(tokens(term))',ellipse,[filled]), ('165','expr(tree(term))',ellipse,[filled]), ('166','expr(term)',ellipse,[filled]), ('167','figure(text)',ellipse,[filled]), ('168','figure(term)',ellipse,[filled]), ('169','ueber(term)',ellipse,[filled])],[ ('95','1',[]), ('97','2',[]), ('97','3',[]), ('97','4',[]), ('100','5',[]), ('101','6',[]), ('100','7',[]), ('102','8',[]), ('103','9',[]), ('103','10',[]), ('105','11',[]), ('106','12',[]), ('105','13',[]), ('107','14',[]), ('108','15',[]), ('107','16',[]), ('107','17',[]), ('106','18',[]), ('106','19',[]), ('108','20',[]), ('108','21',[]), ('110','22',[]), ('111','23',[]), ('101','24',[]), ('159','24',[]), ('113','25',[]), ('113','26',[]), ('114','27',[]), ('135','27',[]), ('114','28',[]), ('115','28',[]), ('115','29',[]), ('135','29',[]), ('116','30',[]), ('117','31',[]), ('118','32',[]), ('118','33',[]), ('120','34',[]), ('122','35',[]), ('123','36',[]), ('125','37',[]), ('125','38',[]), ('127','39',[]), ('129','40',[]), ('130','41',[]), ('130','42',[]), ('130','43',[]), ('131','44',[]), ('132','45',[]), ('133','46',[]), ('136','47',[]), ('135','48',[]), ('137','48',[]), ('135','49',[]), ('138','50',[]), ('135','51',[]), ('139','51',[]), ('135','52',[]), ('139','52',[]), ('135','53',[]), ('139','53',[]), ('139','54',[]), ('139','55',[]), ('139','56',[]), ('139','57',[]), ('139','58',[]), ('140','59',[]), ('157','60',[]), ('143','61',[]), ('144','62',[]), ('144','63',[]), ('144','64',[]), ('144','65',[]), ('145','65',[]), ('146','66',[]), ('147','67',[]), ('148','68',[]), ('148','69',[]), ('161','69',[]), ('149','70',[]), ('147','71',[]), ('147','72',[]), ('150','72',[]), ('151','73',[]), ('153','74',[]), ('135','75',[]), ('135','76',[]), ('155','77',[]), ('156','78',[]), ('135','79',[]), ('135','80',[]), ('160','80',[]), ('160','81',[]), ('162','82',[]), ('163','83',[]), ('164','84',[]), ('163','85',[]), ('165','86',[]), ('166','87',[]), ('165','88',[]), ('165','89',[]), ('167','90',[]), ('168','91',[]), ('169','93',[]), ('169','94',[]), ('1','96',[]), ('2','98',[]), ('3','99',[]), ('4','98',[]), ('5','101',[]), ('6','114',[]), ('7','101',[]), ('8','103',[]), ('9','104',[]), ('10','104',[]), ('11','106',[]), ('12','108',[]), ('13','108',[]), ('14','108',[]), ('15','107',[]), ('16','106',[]), ('17','105',[]), ('18','109',[]), ('19','110',[]), ('20','109',[]), ('21','110',[]), ('22','109',[]), ('23','112',[]), ('25','114',[]), ('26','114',[]), ('28','114',[]), ('29','135',[]), ('30','117',[]), ('31','119',[]), ('32','117',[]), ('33','117',[]), ('34','121',[]), ('35','151',[]), ('36','124',[]), ('37','125',[]), ('38','126',[]), ('39','128',[]), ('40','130',[]), ('41','135',[]), ('42','135',[]), ('43','135',[]), ('44','132',[]), ('45','135',[]), ('46','134',[]), ('47','137',[]), ('49','135',[]), ('50','139',[]), ('51','135',[]), ('54','141',[]), ('55','141',[]), ('56','141',[]), ('57','141',[]), ('58','122',[]), ('59','141',[]), ('60','142',[]), ('61','144',[]), ('62','158',[]), ('63','144',[]), ('64','143',[]), ('65','169',[]), ('66','147',[]), ('67','148',[]), ('68','148',[]), ('69','161',[]), ('70','121',[]), ('71','135',[]), ('72','147',[]), ('73','162',[]), ('74','154',[]), ('75','152',[]), ('76','135',[]), ('77','156',[]), ('78','157',[]), ('79','160',[]), ('80','135',[]), ('81','160',[]), ('82','135',[]), ('83','164',[]), ('84','166',[]), ('85','166',[]), ('86','166',[]), ('87','165',[]), ('88','164',[]), ('89','163',[]), ('90','168',[]), ('91','151',[]), ('92','169',[]), ('93','122',[]), ('94','122',[])].