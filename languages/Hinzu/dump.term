[ (l([id(antlr),name('ANTLR'),expansion('Another Tool for Language Recognition'),headline('The grammar language of the ANTLR technology'),sameAs(extern('Language:ANTLR')),relatesTo(extern('Technology:ANTLR')),facilitates(extern('Parsing')),facilitates(extern('Parser generation'))]),'languages/ANTLR'), (r([id(antlr(text)),extension(g),extension(g4),representationOf(antlr),reason(succeed,[instanceOf(extern('Context-free grammar'))]),reason(hinzuReasoning:testContextFree,[defines(extern('Context-free syntax'))])]),'languages/ANTLR'), (l([id(asl),name('ASL'),expansion('Algebraic Specification Language'),headline('A simple language for algebraic specification'),facilitates(extern('Algebraic specification'))]),'languages/ASL'), (r([id(asl(text)),extension(asl),representationOf(asl),reason(succeed,[instanceOf(extern('Algebraic specification'))])]),'languages/ASL'), (l([id(bal),name('BAL'),expansion('Basic Assembly Language'),headline('A trivial assembly language'),details('BAL is stack- and address-based. Memory access and jumps use symbolic names rather than ints.'),relatesTo(extern('Language:Java bytecode')),facilitates(extern('Compilation')),similarTo(intern(bml))]),'languages/BAL'), (l([id(bcl),name('BCL'),expansion('BGL CST Language'),headline('A format for CSTs for parsing with BGL grammars'),dependsOn(intern(bgl)),facilitates(extern('Parsing'))]),'languages/BCL'), (r([id(bcl(term)),representationOf(bcl),reason(succeed,[instanceOf(extern('Parse tree'))])]),'languages/BCL'), (l([id(bfpl),name('BFPL'),expansion('Basic Functional Programming Language'),headline('A trivial first-order functional programming language'),details('BFPL supports primitive types for integer and Boolean values; it does not support algebraic datatypes. BFPL can be viewed as a small fragment of Haskell, but with an eager semantics.'),relatesTo(extern('Language:Haskell')),facilitates(extern('Functional programming')),embeds(intern(el)),subsetOf(intern(efpl))]),'languages/BFPL'), (r([id(bfpl(text)),extension(bfpl),representationOf(bfpl),reason(succeed,[instanceOf(extern('Functional program'))])]),'languages/BFPL'), (l([id(bgl),name('BGL'),expansion('Basic Grammar Language'),headline('A BNF-like notation for context-free grammars'),details('Rules (productions) are labeled.'),similarTo(extern('Language:BNF')),subsetOf(intern(egl)),facilitates(extern('Syntax definition')),facilitates(extern('Parsing'))]),'languages/BGL'), (r([id(bgl(text)),extension(bgl),representationOf(bgl),reason(succeed,[instanceOf(extern('Context-free grammar')),defines(extern('Context-free syntax'))])]),'languages/BGL'), (l([id(bipl),name('BIPL'),expansion('Basic Imperative Programming Language'),headline('A trivial imperative programming language'),details('BIPL supports primitive types for integer and Boolean values; it does not support input, output, and procedures. BIPL may be viewed as small fragment of C.'),relatesTo(extern('Language:C')),facilitates(extern('Imperative programming')),embeds(intern(el)),subsetOf(intern(eipl))]),'languages/BIPL'), (r([id(bipl(text)),extension(bipl),representationOf(bipl),reason(succeed,[instanceOf(extern('Imperative program'))])]),'languages/BIPL'), (l([id(bl),name('BL'),expansion('Buddy Language'),headline('A trivial language for buddy relationships'),details('BL is an ontology-like language concerned with the representation of collections of persons and their buddy relationships.'),similarTo(extern('Language:FOAF'))]),'languages/BL'), (r([id(bl(text)),extension(bl),representationOf(bl)]),'languages/BL'), (r([id(tbl(graph(term))),representationOf(bl)]),'languages/BL'), (r([id(gbl(graph(term))),representationOf(bl)]),'languages/BL'), (l([id(bml),name('BML'),expansion('Basic Machine Language'),headline('A trivial machine language'),details('BML is stack- and address-based. Memory access and jumps use ints rather than symbolic names.'),relatesTo(extern('Language:Java bytecode')),facilitates(extern('Compilation')),similarTo(intern(bal))]),'languages/BML'), (l([id(bnl),name('BNL'),expansion('Basic Number Language'),headline('A trivial language for binary numbers')]),'languages/BNL'), (r([id(bnl(text)),extension(bnl),representationOf(bnl)]),'languages/BNL'), (l([id(bol),name('BOL'),expansion('Basic OCL-like Language'),headline('A subset of OCL'),subsetOf(extern('Language:OCL'))]),'languages/BOL'), (l([id(bsl),name('BSL'),expansion('Basic Signature Language'),headline('A language for abstract syntax definition'),details('BSL leverages many-sorted signatures for tree-based abstract syntax.'),subsetOf(intern(esl)),facilitates(extern('Syntax definition')),facilitates(extern('Object-program representation'))]),'languages/BSL'), (r([id(bsl(text)),extension(bsl),representationOf(bsl),reason(succeed,[instanceOf(extern('Algebraic signature')),defines(extern('Tree-based abstract syntax'))])]),'languages/BSL'), (l([id(bstl),name('BSTL'),expansion('Basic Signature Transformation Language'),headline('A trivial language for coupled transformations'),dependsOn(intern(bsl)),dependsOn(intern(term))]),'languages/BSTL'), (r([id(bstl(term)),representationOf(bstl)]),'languages/BSTL'), (l([id(btl),name('BTL'),expansion('Basic TAPL Language'),headline('A trivial expression language'),details('There are expression forms on Boolean values and natural numbers inspired by a similar language in Pierce\'s TAPL textbook.'),similarTo(intern(el))]),'languages/BTL'), (r([id(btl(text)),extension(btl),representationOf(btl)]),'languages/BTL'), (l([id(dcg),name('DCG'),expansion('Definite Clause Grammar'),headline('A grammar notation based on logic programming'),sameAs(extern('Language:DCG'))]),'languages/DCG'), (r([id(dcg(prolog(text))),extension(dcg),processor(load),representationOf(dcg)]),'languages/DCG'), (l([id(ddl),name('DDL'),expansion('Data Definition Language'),headline('A SQL DDL-like data definition language'),facilitates(extern('Data definition')),relatesTo(extern('Language:SQL'))]),'languages/DDL'), (r([id(ddl(text)),extension(ddl),representationOf(ddl),reason(succeed,[instanceOf(extern('Data model'))])]),'languages/DDL'), (l([id(dgl),name('DGL'),expansion('Dot-based Graph Language'),headline('A language for describing graphs'),details('DGL graphs are eventually translated to DOT and processed with the GraphViz tool.'),subsetOf(intern(dot)),facilitates(extern('Graph visualization')),relatesTo(extern('Technology:Graphviz'))]),'languages/DGL'), (r([id(dgl(text)),extension(dgl),representationOf(dgl),reason(succeed,[instanceOf(extern('Graph representation'))])]),'languages/DGL'), (l([id(dot),name('DOT'),headline('The input language of the Graphviz tool'),sameAs(extern('Language:DOT')),facilitates(extern('Graph visualization')),relatesTo(extern('Technology:Graphviz'))]),'languages/DOT'), (r([id(dot(text)),extension(dot),representationOf(dot),reason(succeed,[instanceOf(extern('Graph representation'))])]),'languages/DOT'), (l([id(efpl),name('EFPL'),expansion('Extended Functional Programming Language'),headline('A trivial first-order functional programming language'),details('EFPL is an extension of BFPL to support higher-order functions, polymorphism, and type inference.'),relatesTo(extern('Language:Haskell')),facilitates(extern('Functional programming')),embeds(intern(el)),supersetOf(intern(bfpl))]),'languages/EFPL'), (r([id(efpl(text)),extension(efpl),representationOf(efpl),reason(succeed,[instanceOf(extern('Functional program'))])]),'languages/EFPL'), (l([id(egl),name('EGL'),expansion('Extended Grammar Language'),headline('A EBNF-like notation for context-free grammars'),similarTo(extern('Language:EBNF')),supersetOf(intern(bgl)),facilitates(extern('Syntax definition')),facilitates(extern('Parsing'))]),'languages/EGL'), (r([id(egl(text)),extension(egl),representationOf(egl),reason(succeed,[instanceOf(extern('Context-free grammar'))]),reason(hinzuReasoning:testLexical,[defines(extern('Lexical syntax'))]),reason(hinzuReasoning:testContextFree,[defines(extern('Context-free syntax'))])]),'languages/EGL'), (l([id(egtl),name('EGTL'),expansion('Extended Grammar Transformation Language'),headline('A transformation language for grammars'),facilitates(extern('Grammar transformation')),dependsOn(intern(egl))]),'languages/EGTL'), (r([id(egtl(text)),extension(egtl),representationOf(egtl)]),'languages/EGTL'), (l([id(eipl),name('EIPL'),expansion('Extended Imperative Programming Language'),headline('A trivial imperative programming language'),details('EIPL is a small extension of BIPL to support unparameterized procedures in nested scopes.'),relatesTo(extern('Language:C')),facilitates(extern('Imperative programming')),embeds(intern(el)),supersetOf(intern(bipl))]),'languages/EIPL'), (r([id(eipl(text)),extension(eipl),representationOf(eipl),reason(succeed,[instanceOf(extern('Imperative program'))])]),'languages/EIPL'), (l([id(el),name('EL'),expansion('Expression Language'),headline('A trivial expression language'),details('There are arithmetic, relational, and comparison operators on integer and Boolean literals.'),similarTo(intern(btl))]),'languages/EL'), (r([id(el(text)),extension(el),representationOf(el)]),'languages/EL'), (l([id(esl),name('ESL'),expansion('Extended Signature Language'),headline('A language for abstract syntax definition'),details('ESL leverages many-sorted signatures extended with tuples, lists, and primitive types for tree-based abstract syntax.'),supersetOf(intern(bsl)),facilitates(extern('Syntax definition')),facilitates(extern('Object-program representation'))]),'languages/ESL'), (r([id(esl(text)),extension(esl),representationOf(esl),reason(succeed,[instanceOf(extern('Algebraic signature')),defines(extern('Tree-based abstract syntax'))])]),'languages/ESL'), (l([id(fl),name('FL'),expansion('Family Language'),headline('A trivial language for family modeling')]),'languages/FL'), (r([id(nfl(graph(term))),representationOf(fl)]),'languages/FL'), (r([id(rfl1(graph(term))),representationOf(fl)]),'languages/FL'), (r([id(rfl2(graph(term))),representationOf(fl)]),'languages/FL'), (l([id(fsml),name('FSML'),expansion('Finite State Machine Language'),headline('A domain-specific language for finite state machines'),facilitates(extern('Behavioral modeling'))]),'languages/FSML'), (r([id(fsml(text)),extension(fsml),representationOf(fsml)]),'languages/FSML'), (l([id(html),name('HTML'),expansion('HyperText Markup Language'),headline('The standard markup language HTML'),sameAs(extern('Language:HTML')),facilitates(extern('Web publishing'))]),'languages/HTML'), (r([id(html(text)),extension(html),representationOf(html),reason(succeed,[instanceOf(extern('Markup'))])]),'languages/HTML'), (l([id(haskell),name('Haskell'),headline('The functional programming language Haskell'),sameAs(extern('Language:Haskell')),facilitates(extern('Functional programming'))]),'languages/Haskell'), (r([id(haskell(text)),extension(hs),representationOf(haskell),reason(succeed,[instanceOf(extern('Functional program'))])]),'languages/Haskell'), (l([id(hinzu),name('Hinzu'),headline('An annotation language used in the YAS repository'),details('Hinzu serves specifically for the semantic annotation of languages.'),facilitates(extern('Semantic annotation'))]),'languages/Hinzu'), (r([id(hinzu(term)),extension(hinzu),representationOf(hinzu),reason(succeed,[instanceOf(extern('Annotation'))])]),'languages/Hinzu'), (l([id(json),name('JSON'),expansion('JavaScript Object Notation'),headline('The well-known JSON format for data exchange'),sameAs(extern('Language:JSON')),relatesTo(extern('Language:JavaScript')),facilitates(extern('Data exchange')),facilitates(extern('Serialization'))]),'languages/JSON'), (r([id(json),extension(json),representationOf(json)]),'languages/JSON'), (l([id(java),name('Java'),headline('The well-known OO programming language Java'),facilitates(extern('Object-oriented programming'))]),'languages/Java'), (r([id(java(text)),extension(java),representationOf(java),reason(succeed,[instanceOf(extern('OO program'))])]),'languages/Java'), (l([id(lal),name('LAL'),expansion('Linguistic Architecture Language'),headline('A logic-based megamodeling language used in YAS'),details('LAL is a predicate logic-based megamodeling language used for capturing properties of language processors and deriving test cases.'),facilitates(extern('Megamodeling')),facilitates(extern('Testing'))]),'languages/LAL'), (r([id(lal(text)),extension(lal),extension(lal2),representationOf(lal)]),'languages/LAL'), (l([id(mmdl),name('MMDL'),expansion('MetaModel Difference Language'),headline('A format for metamodel-based term differences'),facilitates(extern('Model differencing')),relatesTo(extern('Metamodeling'))]),'languages/MMDL'), (r([id(mmdl(term)),representationOf(mmdl),reason(succeed,[instanceOf(extern('Difference model'))])]),'languages/MMDL'), (l([id(mml),name('MML'),expansion('MetaModeling Language'),headline('A basic metamodeling language'),facilitates(extern('Syntax definition')),facilitates(extern('Metamodeling'))]),'languages/MML'), (r([id(mml(text)),extension(mml),representationOf(mml),reason(succeed,[instanceOf(extern('Metamodel')),defines(extern('Graph-based abstract syntax'))])]),'languages/MML'), (l([id(mmtl),name('MMTL'),expansion('MetaModel Transformation Language'),headline('A trivial transformation language for metamodels'),facilitates(extern('Model transformation')),dependsOn(intern(mml))]),'languages/MMTL'), (r([id(mmtl(term)),representationOf(mmtl)]),'languages/MMTL'), (l([id(markdown),name('Markdown'),headline('A markup-based documentation language'),sameAs(extern('Language:Markdown'))]),'languages/Markdown'), (r([id(markdown(text)),extension(md),representationOf(markdown),reason(succeed,[instanceOf(extern('Markup'))])]),'languages/Markdown'), (l([id(none),name('None'),headline('A proxy for the lack of a (specified) language')]),'languages/None'), (l([id(ppl),name('PPL'),expansion('Pretty Printing Language'),headline('A language for pretty printing'),details('PPL provides different operators for pretty printing based on the composition of boxes. For instance, there are operators for horizontal and vertical composition and indentation.'),facilitates(extern('Pretty printing'))]),'languages/PPL'), (r([id(ppl(term)),extension(ppl),representationOf(ppl)]),'languages/PPL'), (l([id(prolog),name('Prolog'),headline('A logic programming language'),sameAs(extern('Language:Prolog'))]),'languages/Prolog'), (r([id(prolog(text)),extension(pro),processor(load),representationOf(prolog),reason(succeed,[instanceOf(extern('Logic program'))])]),'languages/Prolog'), (l([id(python),name('Python'),headline('A multi-paradigm programming language'),sameAs(extern('Language:Python')),facilitates(extern('Scripting'))]),'languages/Python'), (r([id(python(text)),extension(py),representationOf(python),reason(succeed,[instanceOf(extern('Script'))])]),'languages/Python'), (l([id(tdl),name('TDL'),expansion('Term Difference Language'),headline('A representation format for term differences'),facilitates(extern('Model differencing'))]),'languages/TDL'), (r([id(tdl(term)),representationOf(tdl)]),'languages/TDL'), (l([id(tll),name('TLL'),expansion('Typed Lambda Language'),headline('An applied, typed lambda calculus'),relatesTo(extern('Language:Lambda calculus')),embeds(intern(btl)),similarTo(intern(ull)),facilitates(extern('Functional programming'))]),'languages/TLL'), (l([id(term),name('Term'),headline('Prolog terms as a representation format used in YAS')]),'languages/Term'), (r([id(term),representationOf(term)]),'languages/Term'), (l([id(text),name('Text'),headline('Text as a representation format used in YAS')]),'languages/Text'), (r([id(text),extension(txt),representationOf(text)]),'languages/Text'), (l([id(ull),name('ULL'),expansion('Untyped Lambda Language'),headline('An applied, untyped lambda calculus'),relatesTo(extern('Language:Lambda calculus')),embeds(intern(btl)),similarTo(intern(tll)),facilitates(extern('Functional programming'))]),'languages/ULL'), (l([id(ueber),name('Ueber'),headline('A declarative megamodeling language used in YAS'),details('Ueber is used for build management and regression testing in the YAS repository.'),facilitates(extern('Megamodeling')),facilitates(extern('Build management')),facilitates(extern('Regression testing'))]),'languages/Ueber'), (r([id(ueber(term)),extension(ueber),representationOf(ueber),reason(succeed,[instanceOf(extern('Megamodel')),supports(extern('Build management')),supports(extern('Regression testing'))])]),'languages/Ueber'), (l([id(xml),name('XML'),expansion('Extensible Markup Language'),headline('The markup-based interchange format XML'),sameAs(extern('Language:XML')),facilitates(extern('Data exchange')),facilitates(extern('Serialization'))]),'languages/XML'), (r([id(xml),extension(xml),representationOf(xml),reason(succeed,[instanceOf(extern('Markup'))])]),'languages/XML')].